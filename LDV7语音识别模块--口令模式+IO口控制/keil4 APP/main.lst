C51 COMPILER V9.01   MAIN                                                                  12/14/2021 22:51:16 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\obj\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\code\main.c BROWSE INCDIR(..\code;..\user) DEBUG OBJECTEXTEND PRINT(.\ma
                    -in.lst) OBJECT(..\obj\main.obj)

line level    source

   1          /***************************飞音云电子****************************
   2          **  工程名称：YS-V0.7语音识别模块驱动程序
   3          **      CPU: STC11L08XE
   4          **      晶振：22.1184MHZ
   5          **      波特率：9600 bit/S
   6          **      配套产品信息：YS-V0.7语音识别开发板
   7          **                http://yuesheng001.taobao.com
   8          **  作者：zdings
   9          **  联系：751956552@qq.com
  10          **  修改日期：2013.9.13
  11          **  说明：口令模式+IO控制： 即每次识别时都需要说“小杰”这个口令 ，才能够进行下一级的识别
  12          /***************************飞音云电子******************************/
  13          #include "config.h"
  14          /************************************************************************************/
  15          //      nAsrStatus 用来在main主程序中表示程序运行的状态，不是LD3320芯片内部的状态寄存器
  16          //      LD_ASR_NONE:            表示没有在作ASR识别
  17          //      LD_ASR_RUNING：         表示LD3320正在作ASR识别中
  18          //      LD_ASR_FOUNDOK:         表示一次识别流程结束后，有一个识别结果
  19          //      LD_ASR_FOUNDZERO:       表示一次识别流程结束后，没有识别结果
  20          //      LD_ASR_ERROR:           表示一次识别流程中LD3320芯片内部出现不正确的状态
  21          /***********************************************************************************/
  22          uint8 idata nAsrStatus=0;       
  23          void MCU_init(); 
  24          void ProcessInt0(); //识别处理函数
  25          void  delay(unsigned long uldata);
  26          void    User_handle(uint8 dat);//用户执行操作函数
  27          void Led_test(void);//单片机工作指示
  28          void Delay200ms();
  29          uint8_t G0_flag=DISABLE;//运行标志，ENABLE:运行。DISABLE:禁止运行 
  30          sbit LED=P4^2;//信号指示灯
  31          //应用IO口定义 （模块标注 P2）
  32          sbit PA1=P1^0; //对应板上标号 P1.0
  33          sbit PA2=P1^1;  //对应板上标号 P1.1
  34          sbit PA3=P1^2;  //.....
  35          sbit PA4=P1^3;  //.....
  36          sbit PA5=P1^4;  //.....
  37          sbit PA6=P1^5;  //.....
  38          sbit PA7=P1^6;  //对应板上标号 P1.6
  39          sbit PA8=P1^7;  //对应板上标号 P1.7
  40          
  41          
  42          /***********************************************************
  43          * 名    称： void  main(void)
  44          * 功    能： 主函数     程序入口
  45          * 入口参数：  
  46          * 出口参数：
  47          * 说    明：                                     
  48          * 调用方法： 
  49          **********************************************************/ 
  50          void  main(void)
  51          {
  52   1              uint8 idata nAsrRes;
  53   1              uint8 i=0;
  54   1              Led_test();
C51 COMPILER V9.01   MAIN                                                                  12/14/2021 22:51:16 PAGE 2   

  55   1              MCU_init();
  56   1              LD_Reset();
  57   1              UartIni(); /*串口初始化*/
  58   1              nAsrStatus = LD_ASR_NONE;               //      初始状态：没有在作ASR
  59   1              
  60   1              #ifdef TEST     
  61   1          //PrintCom("一级口令：小杰\r\n"); /*text.....*/
  62   1              //PrintCom("二级口令：1、代码测试\r\n"); /*text.....*/
  63   1              //PrintCom("    2、开发板验证\r\n"); /*text.....*/
  64   1              //PrintCom("    3、开灯\r\n"); /*text.....*/
  65   1              //PrintCom("    4、关灯\r\n"); /*text.....*/
  66   1              //PrintCom("  5、北京\r\n"); /*text.....*/
  67   1              //PrintCom("    6、上海\r\n"); /*text.....*/
  68   1              //PrintCom("    7、广州\r\n"); /*text.....*/
  69   1          PrintCom("INIT");
  70   1              #endif
  71   1      
  72   1              while(1)
  73   1              {
  74   2                      switch(nAsrStatus)
  75   2                      {
  76   3                              case LD_ASR_RUNING:
  77   3                              case LD_ASR_ERROR:              
  78   3                                      break;
  79   3                              case LD_ASR_NONE:
  80   3                              {
  81   4                                      nAsrStatus=LD_ASR_RUNING;
  82   4                                      if (RunASR()==0)        /*      启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算*/
  83   4                                      {
  84   5                                              nAsrStatus = LD_ASR_ERROR;
  85   5                                      }
  86   4                                      break;
  87   4                              }
  88   3                              case LD_ASR_FOUNDOK: /* 一次ASR识别流程结束，去取ASR识别结果*/
  89   3                              {                               
  90   4                                      nAsrRes = LD_GetResult();               /*获取结果*/
  91   4                                      User_handle(nAsrRes);//用户执行函数 
  92   4                                      nAsrStatus = LD_ASR_NONE;
  93   4                                      break;
  94   4                              }
  95   3                              case LD_ASR_FOUNDZERO:
  96   3                              default:
  97   3                              {
  98   4                                      nAsrStatus = LD_ASR_NONE;
  99   4                                      break;
 100   4                              }
 101   3                      }// switch                              
 102   2              }// while
 103   1      
 104   1      }
 105          /***********************************************************
 106          * 名    称：     LED灯测试
 107          * 功    能： 单片机是否工作指示
 108          * 入口参数： 无 
 109          * 出口参数：无
 110          * 说    明：                                     
 111          **********************************************************/
 112          void Led_test(void)
 113          {
 114   1              LED=~ LED;
 115   1              Delay200ms();
 116   1              LED=~ LED;
C51 COMPILER V9.01   MAIN                                                                  12/14/2021 22:51:16 PAGE 3   

 117   1              Delay200ms();
 118   1              LED=~ LED;
 119   1              Delay200ms();
 120   1              LED=~ LED;
 121   1              Delay200ms();
 122   1              LED=~ LED;
 123   1              Delay200ms();
 124   1              LED=~ LED;
 125   1      }
 126          /***********************************************************
 127          * 名    称： void MCU_init()
 128          * 功    能： 单片机初始化
 129          * 入口参数：  
 130          * 出口参数：
 131          * 说    明：                                     
 132          * 调用方法： 
 133          **********************************************************/ 
 134          void MCU_init()
 135          {
 136   1              P0 = 0xff;
 137   1              P1 = 0x00;
 138   1              P2 = 0xff;
 139   1              P3 = 0xff;
 140   1              P4 = 0xff;
 141   1      
 142   1              P1M0=0XFF;      //P1端口设置为推挽输出功能，即提高IO口驱动能力，从驱动继电器模块工作
 143   1              P1M1=0X00;
 144   1      
 145   1              LD_MODE = 0;            //      设置MD管脚为低，并行模式读写
 146   1              IE0=1;
 147   1              EX0=1;
 148   1              EA=1;
 149   1      }
 150          /***********************************************************
 151          * 名    称：    延时函数
 152          * 功    能：
 153          * 入口参数：  
 154          * 出口参数：
 155          * 说    明：                                     
 156          * 调用方法： 
 157          **********************************************************/ 
 158          void Delay200us()               //@22.1184MHz
 159          {
 160   1              unsigned char i, j;
 161   1              _nop_();
 162   1              _nop_();
 163   1              i = 5;
 164   1              j = 73;
 165   1              do
 166   1              {
 167   2                      while (--j);
 168   2              } while (--i);
 169   1      }
 170          
 171          void  delay(unsigned long uldata)
 172          {
 173   1              unsigned int j  =  0;
 174   1              unsigned int g  =  0;
 175   1              while(uldata--)
 176   1              Delay200us();
 177   1      }
 178          
C51 COMPILER V9.01   MAIN                                                                  12/14/2021 22:51:16 PAGE 4   

 179          void Delay200ms()               //@22.1184MHz
 180          {
 181   1              unsigned char i, j, k;
 182   1      
 183   1              i = 17;
 184   1              j = 208;
 185   1              k = 27;
 186   1              do
 187   1              {
 188   2                      do
 189   2                      {
 190   3                              while (--k);
 191   3                      } while (--j);
 192   2              } while (--i);
 193   1      }
 194          
 195          /***********************************************************
 196          * 名    称： 中断处理函数
 197          * 功    能：
 198          * 入口参数：  
 199          * 出口参数：
 200          * 说    明：                                     
 201          * 调用方法： 
 202          **********************************************************/ 
 203          void ExtInt0Handler(void) interrupt 0  
 204          {       
 205   1              ProcessInt0();                          /*      LD3320 送出中断信号，包括ASR和播放MP3的中断，需要在中断处理函数中分别处理*/
 206   1      }
 207          /***********************************************************
 208          * 名    称：用户执行函数 
 209          * 功    能：识别成功后，执行动作可在此进行修改 
 210          * 入口参数： 无 
 211          * 出口参数：无
 212          * 说    明： 通过控制PAx端口的高低电平，从而控制外部继电器的通断                                         
 213          **********************************************************/
 214          void    User_handle(uint8 dat)
 215          {
 216   1           //UARTSendByte(dat);//串口识别码（十六进制）
 217   1                       if(0==dat)
 218   1                       {
 219   2                              G0_flag=ENABLE;
 220   2                                      LED=0;
 221   2                                      PrintCom("LISTENING");
 222   2                       }
 223   1                       else if(ENABLE==G0_flag)
 224   1                       {      
 225   2                                      G0_flag=DISABLE;
 226   2                                      LED=1;
 227   2                                      
 228   2                               switch(dat)               /*对结果执行相关操作,客户修改*/
 229   2                                {
 230   3                                        case CODE_QSMS:       
 231   3                                                      PrintCom("QSMS");
 232   3                                                                                                               break;
 233   3                                              case CODE_GFWD:  
 234   3                                                      PrintCom("GFWD");
 235   3                                                                                                               break;
 236   3                                              case CODE_KFWD:                         
 237   3                                                      PrintCom("KFWD");
 238   3                                                                                                              break;
 239   3                                              case CODE_KFS:                          
 240   3                                                      PrintCom("KFS");
C51 COMPILER V9.01   MAIN                                                                  12/14/2021 22:51:16 PAGE 5   

 241   3                                                                                                              break;
 242   3                                              case CODE_GFS:                          
 243   3                                                      PrintCom("GFS");
 244   3                                                                                                              break;
 245   3                                              case CODE_FSYD:                         
 246   3                                                      PrintCom("FSYD");
 247   3                                                                                                              break;
 248   3                                              case CODE_FSED:                         
 249   3                                                      PrintCom("FSED");
 250   3                                                                                                              break;
 251   3                                              case CODE_FSSD:                         
 252   3                                                      PrintCom("FSSD");
 253   3                                                                                                              break;
 254   3                                              case CODE_KD:                           
 255   3                                                      PrintCom("KD");
 256   3                                                                                                              break;
 257   3                                              case CODE_GD:                           
 258   3                                                      PrintCom("GD");
 259   3                                                                                                              break
 260   3                                              default:PrintCom("ERROR"); //串口输出提示信息（可删除）
 261   3                                                                                                              break;
 262   3                                      }       
 263   2                              }       
 264   1                              else    
 265   1                              {
 266   2                                      PrintCom("SAYACOM"); //串口输出提示信息（可删除）       
 267   2                              }
 268   1      }        


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    443    ----
   CONSTANT SIZE    =     73    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      10
   IDATA SIZE       =      1       1
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
